PORT = 7001
SERVER = "www.folloger.com"
UUID = '** device UUID **'

AGENT_HOST = 'zabbix agent host name'
AGENT_PORT = 10050 # zabbix agent port number

ITEMS = [
         {
           'type' => :simple,
           'key' => 'system.uptime',
           'class' => DataAbstraction::SensorData::ComputerDuration,
           'unit' => 'sec',
           'name' => 'uptime'
         },{
           'type' => :simple,
           'key' => 'system.cpu.load[all,avg1]',
           'class' => DataAbstraction::SensorData::CPULoad,
           'unit' => '',
           'name' => 'avg1'
         },{
           'type' => :simple,
           'key' => 'system.cpu.load[all,avg5]',
           'class' => DataAbstraction::SensorData::CPULoad,
           'unit' => '',
           'name' => 'avg5'
         },{
           'type' => :simple,
           'key' => 'system.cpu.load[all,avg15]',
           'class' => DataAbstraction::SensorData::CPULoad,
           'unit' => '',
           'name' => 'avg15'
         },{
           'type' => :simple,
           'key' => 'vm.memory.size[total]',
           'class' => DataAbstraction::SensorData::MemorySize,
           'unit' => 'B',
           'name' => 'total_memory'
         },{
           'type' => :simple,
           'key' => 'vm.memory.size[used]',
           'class' => DataAbstraction::SensorData::MemorySize,
           'unit' => 'B',
           'name' => 'used_memory'
         },{
           'type' => :simple,
           'key' => 'vm.memory.size[free]',
           'class' => DataAbstraction::SensorData::MemorySize,
           'unit' => 'B',
           'name' => 'free_memory'
         },{
           'type' => :ratio,
           'key' => 'vfs.fs.size',
           'target' => '/',
           'request' => 'free',
           'class' => DataAbstraction::SensorData::DiskRatio,
           'unit' => '%',
           'name' => "disk_free /"
         },{
           'type' => :ratio,
           'key' => 'vfs.fs.size',
           'target' => '/',
           'request' => 'used',
           'class' => DataAbstraction::SensorData::DiskRatio,
           'unit' => '%',
           'name' => "disk_used /"
         },{
           'type' => :ratio,
           'key' => 'vfs.fs.size',
           'target' => '/home',
           'request' => 'free',
           'class' => DataAbstraction::SensorData::DiskRatio,
           'unit' => '%',
           'name' => "disk_free /home"
         },{
           'type' => :ratio,
           'key' => 'vfs.fs.size',
           'target' => '/home',
           'request' => 'used',
           'class' => DataAbstraction::SensorData::DiskRatio,
           'unit' => '%',
           'name' => "disk_used /home"
         },{
           'type' => :diff,
           'key' => 'net.if.in[eth0]',
           'class' => DataAbstraction::SensorData::DataRate,
           'name' => 'in_eth0'
         },{
           'type' => :diff,
           'key' => 'net.if.out[eth0]',
           'class' => DataAbstraction::SensorData::DataRate,
           'name' => 'out_eth0'
         }
        ]
